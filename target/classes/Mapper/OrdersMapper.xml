<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.Dao.OrdersMapper">
    <resultMap id="BaseResultMap" type="demo.Model.Orders">
        <result column="orders_id" jdbcType="INTEGER" property="orders_id"/>
        <result column="room_number" jdbcType="VARCHAR" property="room_number"/>
        <result column="record_time" jdbcType="TIMESTAMP" property="record_time"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="start_time"/>
        <result column="end_time" jdbcType="TIMESTAMP" property="end_time"/>
        <result column="customer_id" jdbcType="VARCHAR" property="customer_id"/>
        <result column="customer_idcard" jdbcType="VARCHAR" property="customer_idcard"/>
        <result column="customer_name" jdbcType="VARCHAR" property="customer_name"/>
        <result column="orders_status" jdbcType="VARCHAR" property="orders_status"/>
        <result column="orders_type" jdbcType="VARCHAR" property="orders_type"/>
        <result column="orders_cost" jdbcType="DOUBLE" property="orders_cost"/>
    </resultMap>

    <sql id="Base_Column_List">
    orders_id,room_number,record_time,start_time,end_time,customer_id,customer_idcard,customer_name
    orders_status,orders_type,orders_cost
  </sql>


    <!--    查找-->

    <select id="getallordersid" resultType="java.lang.String">
        select
        orders_id
        from orders
    </select>

<!--    查找收入-->
    <select id="getBillByRoomId" parameterType="java.lang.Integer" resultType="demo.Model.TempModel.Bill">
        select orders.customer_id,orders.customer_name,orders_id,room.room_id,room.room_number,
                room.room_type,room.room_floor,orders.start_time,orders.end_time
        from orders
        left join room
        on orders_status = '在住' and and room_id = #{0}

    </select>

    <!--    增加-->
    <insert id="insert" parameterType="demo.Model.Orders">
    insert into orders (orders_id, room_number, record_time, 
      start_time, end_time, customer_id, 
      customer_idcard, customer_name, orders_status, 
      orders_type, orders_cost)
    values (#{orders_id,jdbcType=INTEGER}, #{room_number,jdbcType=VARCHAR}, #{record_time,jdbcType=TIMESTAMP}, 
      #{start_time,jdbcType=TIMESTAMP}, #{end_time,jdbcType=TIMESTAMP}, #{customer_id,jdbcType=VARCHAR}, 
      #{customer_idcard,jdbcType=VARCHAR}, #{customer_name,jdbcType=VARCHAR}, #{orders_status,jdbcType=VARCHAR}, 
      #{orders_type,jdbcType=VARCHAR}, #{orders_cost,jdbcType=DOUBLE})
  </insert>
    <insert id="insertSelective" parameterType="demo.Model.Orders">
        insert into orders
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orders_id != null">
                orders_id,
            </if>
            <if test="room_number != null">
                room_number,
            </if>
            <if test="record_time != null">
                record_time,
            </if>
            <if test="start_time != null">
                start_time,
            </if>
            <if test="end_time != null">
                end_time,
            </if>
            <if test="customer_id != null">
                customer_id,
            </if>
            <if test="customer_idcard != null">
                customer_idcard,
            </if>
            <if test="customer_name != null">
                customer_name,
            </if>
            <if test="orders_status != null">
                orders_status,
            </if>
            <if test="orders_type != null">
                orders_type,
            </if>
            <if test="orders_cost != null">
                orders_cost,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orders_id != null">
                #{orders_id,jdbcType=INTEGER},
            </if>
            <if test="room_number != null">
                #{room_number,jdbcType=VARCHAR},
            </if>
            <if test="record_time != null">
                #{record_time,jdbcType=TIMESTAMP},
            </if>
            <if test="start_time != null">
                #{start_time,jdbcType=TIMESTAMP},
            </if>
            <if test="end_time != null">
                #{end_time,jdbcType=TIMESTAMP},
            </if>
            <if test="customer_id != null">
                #{customer_id,jdbcType=VARCHAR},
            </if>
            <if test="customer_idcard != null">
                #{customer_idcard,jdbcType=VARCHAR},
            </if>
            <if test="customer_name != null">
                #{customer_name,jdbcType=VARCHAR},
            </if>
            <if test="orders_status != null">
                #{orders_status,jdbcType=VARCHAR},
            </if>
            <if test="orders_type != null">
                #{orders_type,jdbcType=VARCHAR},
            </if>
            <if test="orders_cost != null">
                #{orders_cost,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>

    <!--    sql语句需要添加判断更严格的判断条件，判断新时段内房间未被占用预定-->
    <!--    新时间晚于当前时间并且早于存在的预定订单时间-->
    <update id="updateDateEndByOrderID">
        update orders
        set end_time = #{1}
        where orders_id = #{0}
        and unix_timestamp(end_time) &lt; unix_timestamp(#{1})
        and (not exists (select start_time from orders where room_number = (select room_number from orders
                where orders_id = #{0}) and start_time &lt; #{1}
                and start_time &gt; (select end_time from orders where orders_id = #{0}))
        )
    </update>

    <!--    更新订单状态-->
    <update id="updateStatusByOrderID">
        update orders
        set orders_status = #{1}
        where orders_id = #{0}
    </update>


</mapper>